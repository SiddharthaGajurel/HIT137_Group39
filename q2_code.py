# -*- coding: utf-8 -*-
"""q2 code.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mcf5_StqC3LPO6znDmHCFAw5PyQUpwtH
"""

import pandas as pd

# Define the paths to the uploaded files
file_paths = [
    '/content/stations_group_1986.csv',
    '/content/stations_group_1987.csv',
    '/content/stations_group_1988.csv',
    '/content/stations_group_1989.csv',
    '/content/stations_group_1990.csv',
    '/content/stations_group_1991.csv',
    '/content/stations_group_1992.csv',
    '/content/stations_group_1993.csv',
    '/content/stations_group_1994.csv',
    '/content/stations_group_1995.csv',
    '/content/stations_group_1996.csv',
    '/content/stations_group_1997.csv',
    '/content/stations_group_1998.csv',
    '/content/stations_group_1999.csv',
    '/content/stations_group_2000.csv',
    '/content/stations_group_2001.csv',
    '/content/stations_group_2002.csv',
    '/content/stations_group_2003.csv',
    '/content/stations_group_2004.csv',
    '/content/stations_group_2005.csv'


]

# Load all the CSV files into a list of DataFrames
dfs = [pd.read_csv(file) for file in file_paths]

# Combine all DataFrames into one
data = pd.concat(dfs, ignore_index=True)

# Display the first few rows of the combined data to check the structure
data.head()

# Step 1: Calculate Seasonal Averages

def calculate_seasonal_average(df):
    # Seasons mapping for months
    seasons = {
        'Summer': ['December', 'January', 'February'],
        'Autumn': ['March', 'April', 'May'],
        'Winter': ['June', 'July', 'August'],
        'Spring': ['September', 'October', 'November']
    }

    seasonal_averages = {}
    for season, months in seasons.items():
        season_columns = [month for month in months if month in df.columns]
        seasonal_averages[season] = df[season_columns].mean(axis=1, skipna=True).mean()

    return seasonal_averages

# Step 2: Find Station(s) with the Largest Temperature Range

def find_temperature_range(df):
    temp_range_data = {}

    for index, row in df.iterrows():
        temp_values = row[4:]  # Skip the first four columns (station info)
        max_temp = temp_values.max()
        min_temp = temp_values.min()
        temp_range = max_temp - min_temp

        temp_range_data[row['STATION_NAME']] = {
            'range': temp_range,
            'max_temp': max_temp,
            'min_temp': min_temp
        }

    max_range = max([data['range'] for data in temp_range_data.values()])
    largest_range_stations = [
        station for station, data in temp_range_data.items() if data['range'] == max_range
    ]

    return largest_range_stations, max_range, temp_range_data

# Step 3: Find Temperature Stability

def find_temperature_stability(df):
    stability_data = {}

    for index, row in df.iterrows():
        temp_values = row[4:]  # Skip the first four columns (station info)
        std_dev = temp_values.std()
        stability_data[row['STATION_NAME']] = std_dev

    min_std_dev = min(stability_data.values())
    max_std_dev = max(stability_data.values())

    most_stable_stations = [
        station for station, std_dev in stability_data.items() if std_dev == min_std_dev
    ]
    most_variable_stations = [
        station for station, std_dev in stability_data.items() if std_dev == max_std_dev
    ]

    return most_stable_stations, min_std_dev, most_variable_stations, max_std_dev

# Step 4: Calculate all values
seasonal_averages = calculate_seasonal_average(data)
largest_range_stations, max_range, temp_range_data = find_temperature_range(data)
most_stable_stations, min_std_dev, most_variable_stations, max_std_dev = find_temperature_stability(data)

# Step 5: Save Results to Files

# Write Seasonal Average to file
with open("/content/average_temp.txt", "w") as f:
    for season, avg_temp in seasonal_averages.items():
        f.write(f"{season}: {avg_temp:.2f}°C\n")

# Write Largest Temperature Range to file
with open("/content/largest_temp_range_station.txt", "w") as f:
    for station in largest_range_stations:
        range_data = temp_range_data[station]
        f.write(f"{station}: Range {range_data['range']:.2f}°C (Max: {range_data['max_temp']:.2f}°C, Min: {range_data['min_temp']:.2f}°C)\n")

# Write Temperature Stability Stations to file
with open("/content/temperature_stability_stations.txt", "w") as f:
    for station in most_stable_stations:
        f.write(f"Most Stable: {station}: StdDev {min_std_dev:.2f}°C\n")
    for station in most_variable_stations:
        f.write(f"Most Variable: {station}: StdDev {max_std_dev:.2f}°C\n")

# Display the generated file paths for downloading
"/content/average_temp.txt", "/content/largest_temp_range_station.txt", "/content/temperature_stability_stations.txt"